let
  Source = Lakehouse.Contents([]),
  Navigation = Source{[workspaceId = "b03298d4-6ede-4cb6-9b6f-3e4d99099846"]}[Data],
  #"Navigation 1" = Navigation{[lakehouseId = "6bc47c95-d868-490a-a86a-08d7e1b1f0e9"]}[Data],
  #"Navigation 2" = #"Navigation 1"{[Id = "Files", ItemKind = "Folder"]}[Data],
  #"Navigation 3" = #"Navigation 2"{[Name = "Raw"]}[Content],
  #"Navigation 4" = #"Navigation 3"{[Name = "BOM"]}[Content],
  #"Navigation 5" = #"Navigation 4"{[Name = "IDW11160.xml"]}[Content],
  #"Imported XML" = Xml.Tables(#"Navigation 5"),
  #"Navigation 6" = #"Imported XML"{0}[forecast],
  #"Expanded area" = Table.ExpandTableColumn(#"Navigation 6", "area", {"forecast-period", "Attribute:aac", "Attribute:description", "Attribute:type", "Attribute:parent-aac"}, {"forecast-period", "Attribute:aac", "Attribute:description", "Attribute:type", "Attribute:parent-aac"}),
  #"Expanded forecast-period" = Table.ExpandTableColumn(#"Expanded area", "forecast-period", {"text", "Attribute:start-time-local", "Attribute:end-time-local", "Attribute:start-time-utc", "Attribute:end-time-utc"}, {"text", "Attribute:start-time-local", "Attribute:end-time-local", "Attribute:start-time-utc", "Attribute:end-time-utc"}),
  #"Expanded text" = Table.ExpandTableColumn(#"Expanded forecast-period", "text", {"Element:Text", "Attribute:type"}, {"Element:Text", "Attribute:type.1"}),
  #"Pivoted column" = Table.Pivot(Table.TransformColumnTypes(#"Expanded text", {{"Attribute:type.1", type text}}), List.Distinct(Table.TransformColumnTypes(#"Expanded text", {{"Attribute:type.1", type text}})[#"Attribute:type.1"]), "Attribute:type.1", "Element:Text"),
  #"Removed columns" = Table.RemoveColumns(#"Pivoted column", {"Attribute:start-time-local", "Attribute:end-time-local"}),
  #"Renamed columns" = Table.RenameColumns(#"Removed columns", {{"Attribute:start-time-utc", "StartTime"}, {"Attribute:end-time-utc", "EndTime"}, {"Attribute:aac", "AAC"}, {"Attribute:description", "Description"}, {"Attribute:type", "Type"}, {"Attribute:parent-aac", "ParentAAC"}, {"synoptic_situation", "SynopticSituation"}, {"preamble", "Preamble"}, {"warning_summary_footer", "WarningSummaryFooter"}, {"product_footer", "ProductFooter"}, {"postamble", "Postamble"}, {"forecast_winds", "ForecastWinds"}, {"forecast_seas", "ForecastSeas"}, {"forecast_swell1", "ForecastSwell"}, {"forecast_swell2", "ForecastSwell2"},{"forecast_weather", "ForecastWeather"}}),
  #"Changed column type 2" = Table.TransformColumnTypes(#"Renamed columns", {{"StartTime", type datetime}, {"EndTime", type datetime}, {"SynopticSituation", type text}, {"Preamble", type text}, {"WarningSummaryFooter", type text}, {"ProductFooter", type text}, {"Postamble", type text}, {"ForecastWinds", type text}, {"ForecastSeas", type text}, {"ForecastSwell", type text}, {"ForecastWeather", type text}, {"ForecastSwell2", type text}})
in
  #"Changed column type 2"


#This PQ could be made into a function to parameterise the Ids and paths (but not necessary)
(workspaceId, lakehouseId, folder, file) => let
  Source = Lakehouse.Contents([]),
  Navigation = Source{[workspaceId = workspaceId]}[Data],
  #"Navigation 1" = Navigation{[lakehouseId = lakehouseId]}[Data],
  #"Navigation 2" = #"Navigation 1"{[Id = "Files", ItemKind = "Folder"]}[Data],
  #"Navigation 3" = #"Navigation 2"{[Name = folder]}[Content],
  #"Navigation 4" = #"Navigation 3"{[Name = file]}[Content],
  #"Imported XML" = Xml.Tables(#"Navigation 4"),
  #"Navigation 5" = #"Imported XML"{0}[forecast],
  #"Navigation 6" = #"Navigation 5"{0}[area],
  #"Changed column type 1" = Table.TransformColumnTypes(#"Navigation 6", {{"Attribute:aac", type text}, {"Attribute:description", type text}, {"Attribute:type", type text}, {"Attribute:parent-aac", type text}}),
  #"Expanded forecast-period" = Table.ExpandTableColumn(#"Changed column type 1", "forecast-period", {"text", "Attribute:start-time-local", "Attribute:end-time-local", "Attribute:start-time-utc", "Attribute:end-time-utc"}, {"text", "Attribute:start-time-local", "Attribute:end-time-local", "Attribute:start-time-utc", "Attribute:end-time-utc"}),
  #"Expanded text" = Table.ExpandTableColumn(#"Expanded forecast-period", "text", {"Element:Text", "Attribute:type"}, {"Element:Text", "Attribute:type.1"}),
  #"Pivoted column" = Table.Pivot(Table.TransformColumnTypes(#"Expanded text", {{"Attribute:type.1", type text}}), List.Distinct(Table.TransformColumnTypes(#"Expanded text", {{"Attribute:type.1", type text}})[#"Attribute:type.1"]), "Attribute:type.1", "Element:Text"),
  #"Removed columns" = Table.RemoveColumns(#"Pivoted column", {"Attribute:start-time-local", "Attribute:end-time-local"}),
  #"Renamed columns" = Table.RenameColumns(#"Removed columns", {{"Attribute:start-time-utc", "StartTime"}, {"Attribute:end-time-utc", "EndTime"}, {"Attribute:aac", "AAC"}, {"Attribute:description", "Description"}, {"Attribute:type", "Type"}, {"Attribute:parent-aac", "ParentAAC"}, {"synoptic_situation", "SynopticSituation"}, {"preamble", "Preamble"}, {"warning_summary_footer", "WarningSummaryFooter"}, {"product_footer", "ProductFooter"}, {"postamble", "Postamble"}, {"forecast_winds", "ForecastWinds"}, {"forecast_seas", "ForecastSeas"}, {"forecast_swell1", "ForecastSwell"}, {"forecast_weather", "ForecastWeather"}}),
  #"Changed column type 2" = Table.TransformColumnTypes(#"Renamed columns", {{"StartTime", type datetime}, {"EndTime", type datetime}, {"SynopticSituation", type text}, {"Preamble", type text}, {"WarningSummaryFooter", type text}, {"ProductFooter", type text}, {"Postamble", type text}, {"ForecastWinds", type text}, {"ForecastSeas", type text}, {"ForecastSwell", type text}, {"ForecastWeather", type text}, {"forecast_swell2", type text}, {"forecast_caution", type text}})
in
  #"Changed column type 2"


#Save this as a new query "Forecasts"
  let
  Source = LoadBOMFile(workspaceId, lakehouseId, folder, file)
in
  Source


#Create four new parameters:
workspaceId
lakehouseId
folder
file



